@page "/dashboard"
@page "/dashboard/{Months:int}/{UserId:int}"
@using RPS.Core.Models;
@using RPS.Web.Server.Components.Backlog
@using RPS.Web.Server.Components.Dashboard


@inject NavigationManager NavigationManager

<div class="dashboard">

    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3">

        <div class="col-md order-md-first text-center text-md-left">
            <h2>
                <span class="small text-uppercase text-muted d-block">Statistics</span>
                @if (DateStart.HasValue && DateEnd.HasValue)
                {
    <span id="spanFilteredDateRange">
        @DateStart.Value.ToString("MMM d, yyyy") - @DateEnd.Value.ToString("MMM d, yyyy")
    </span>}

            </h2>
        </div>

        <div class="btn-toolbar mb-2 mb-md-0">
            <div class="btn-group mr-2">

                @*<TelerikCalendar SelectionMode="@CalendarSelectionMode.Single" 
                                    ValueChanged="@SingleSelectionChangeHandler">

                </TelerikCalendar>*@

               <div class="btn-group mr-2">

                <TelerikComboBox Data="@Assignees" TextField="FullName" ValueField="Id" @bind-Value="SelectedAssigneeId"
                                 Placeholder="Select assignee.." ClearButton="true" Filterable="true" FilterOperator="StringFilterOperator.Contains" Width="260px">
                    <ItemTemplate>
                        @{
                            var item = context as PtUser;
                            <div class="row" style="margin-left: 5px;">
                                <UserAvatar User="item" ClassName="li-avatar rounded mx-auto"/>
                                <span style="margin-left: 5px;">@item.FullName</span>
                            </div>
                        }

                    </ItemTemplate>
                </TelerikComboBox>



            </div>

                <TelerikButton Class="tbtn mr-1" Icon="calendar" OnClick="@(_ => DateRangeFilter(3))">3 Months</TelerikButton>
                <TelerikButton Class="tbtn mr-1" Icon="calendar" OnClick="@(_ => DateRangeFilter(6))">6 Months</TelerikButton>
                <TelerikButton Class="tbtn mr-1" Icon="calendar" OnClick="@(_ => DateRangeFilter(12))">1 Year</TelerikButton>
            </div>
        </div>
    </div>



        <TelerikTileLayout  Columns="4" 
                            RowHeight="230px" 
                            Reorderable="true" 
                            Resizable="true"
                            OnResize="@ItemResize">
            <TileLayoutItems>
                 <TileLayoutItem HeaderText="Active Issues" RowSpan="1">
                    <Content>
                        <div class="col-12 col-lg-6 col-xl pb-4 active-issues">
                            <span class="comp-label">
                                <strong>@IssueCountActive</strong>
                                <small>Active issues</small>
                            </span>
                        </div>
                    </Content>
                </TileLayoutItem>
                <TileLayoutItem HeaderText="Closed Issues" RowSpan="1">
                    <Content>
                        <div class="col-12 col-lg-6 col-xl pb-4 text-success closed-issues">
                            <span class="comp-label">
                                <strong>@IssueCountClosed</strong>
                                <small>Closed issues</small>
                            </span>
                        </div>
                    </Content>
                </TileLayoutItem>
                <TileLayoutItem HeaderText="Open Issues" RowSpan="1">
                    <Content>
                        <div class="col-12 col-lg-6 col-xl pb-4 text-danger open-issues">
                            <span class="comp-label">
                                <strong>@IssueCountOpen</strong>
                                <small>Open issues</small>
                            </span>
                        </div>
                    </Content>
                </TileLayoutItem>
                <TileLayoutItem HeaderText="Active Issues" RowSpan="1">
                    <Content>
                            <div class="col-12 col-lg-6 col-xl pb-4 close-rate">
                                <span class="comp-label">
                                    <strong>@IssueCloseRate</strong>
                                    <small>Close rate</small>
                                </span>
                                <p class="m-0 small text-uppercase text-muted">
                                    Highest:
                                    100%
                                    on Oct 11, 2018
                                </p>
                                <p class="m-0 small text-uppercase text-muted">
                                    Lowest:
                                    20%
                                    on Oct 9, 2018
                                </p>
                            </div>
                    </Content>
                </TileLayoutItem>
                <TileLayoutItem HeaderText="All Issues" ColSpan="4" RowSpan="2">
                    <Content>
                        <IssueChart Filter="Filter" @ref="IssueChartRef"/>
                    </Content>
                </TileLayoutItem>

               <TileLayoutItem HeaderText="Telerik Card Demo" ColSpan="2" RowSpan="2">
                   <Content>
                        <TelerikCard Width="500px">
                            <CardHeader>
                                <CardTitle>Statistics Card</CardTitle>
                            </CardHeader>

                            <CardBody>
                                
                                    <CardTitle>Issues</CardTitle>
                                    <CardSeparator></CardSeparator>
                                    <CardSubTitle>Active Issues</CardSubTitle>
                                    <p>@IssueCountActive</p>
                                    <CardSubTitle>Closed Issues</CardSubTitle>
                                    <p>@IssueCountClosed</p>
                                    <CardSubTitle>Open Issues</CardSubTitle>
                                    <p>@IssueCountOpen</p>
                            </CardBody>
                            <CardActions>
                                <TelerikButton>Active</TelerikButton>
                                <TelerikButton>Closed</TelerikButton>
                                <TelerikButton>Open</TelerikButton>
                            </CardActions>
                            <CardFooter>
                                <span style="float:right">Created By Samuel</span>
                            </CardFooter>

                        </TelerikCard>
                   </Content>
                </TileLayoutItem>

            <TileLayoutItem HeaderText="Telerik Carousel Demo" ColSpan="2" RowSpan="2">
                <Content>
                    <TelerikCarousel Class="mx-auto" Data="@CarouselData" 
                        Width="500px" Height="400px">
                        <Template>
                            <div class="d-flex justify-content-md-center">
                                ID @(context.ID) : @(context.Text)
                            </div>
                            <div class="d-flex justify-content-md-center">
                                <CardImage Src="https://docs.telerik.com/blazor-ui/components/card/images/rome.jpg"></CardImage>
                            </div>
                        </Template>
                    </TelerikCarousel>
                </Content>
            </TileLayoutItem>

            <TileLayoutItem HeaderText="Telerik Chunk Progress Bar" ColSpan="4" RowSpan="1">
                <Content>
                    <TelerikChunkProgressBar Value="@ChunkProgressBarValue" Max="@MaxValue" />
                    <TelerikButton ThemeColor="primary" Class="d-flex mt-5 mx-auto" OnClick="@IncrementProgressBar">Click me to increment progress bar</TelerikButton>
                </Content>
            </TileLayoutItem>
              
            <TileLayoutItem HeaderText="Checkbox Demo" ColSpan="2" RowSpan="2">
                <Content>
                  <div class="form-check">
                        <TelerikCheckBox Class="form-check-input" Id="myCheckbox1" @bind-Value="@isSelected1" />
                        <label class="form-check-label" for="myCheckbox1">@( isSelected1 ? "1 Selected" : "Not Selected")</label>
                        <br />
                        <TelerikCheckBox Class="form-check-input" Id="myCheckbox2" @bind-Value="@isSelected2" />
                        <label class="form-check-label" for="myCheckbox2">@( isSelected2 ? "2 Selected" : "Not Selected")</label>
                        <br />
                        <TelerikCheckBox Class="form-check-input" Id="myCheckbox3" @bind-Value="@isSelected3" />
                        <label class="form-check-label" for="myCheckbox3">@( isSelected3 ? "3 Selected" : "Not Selected")</label>
                </div> 
                </Content>
            </TileLayoutItem>
            

            <TileLayoutItem Class="tileBgColor" HeaderText="ColorGradient Demo" ColSpan="2" RowSpan="2">
                <Content>
                    <TelerikColorGradient Class="d-flex my-auto mx-auto" @bind-Value="@colorValue" />
                </Content>

            </TileLayoutItem>


            <TileLayoutItem>
                <Content>

                </Content>
            </TileLayoutItem>

            </TileLayoutItems>
        </TelerikTileLayout>




</div>




<link href="css/dashboard.css" rel="stylesheet" />

@code {

    public IssueChart IssueChartRef { get; set; }

    private void DateRangeFilter(int months)
    {
        Months = months;
        UserId = UserId.HasValue ? UserId.Value : 0;
        NavigationManager.NavigateTo($"/dashboard/{Months}/{UserId}");
        Refresh();
    }



    private void ItemResize()
    {
        IssueChartRef.RefreshTelerikChart();
    }

    public class CarouselModel
    {
        public int ID { get; set; }
        public string Text { get; set; }
    }

    public IEnumerable<CarouselModel> CarouselData = Enumerable.Range(1, 5).Select(
        x => new CarouselModel
            {
                ID = x,
                Text = "Text " + x,

            }
    );

    private bool isSelected1 { get; set; }
    private bool isSelected2 { get; set; }
    private bool isSelected3 { get; set; }


    public double MaxValue { get; set; } = 5;
    public double ChunkProgressBarValue { get; set; } = 3;

    public void IncrementProgressBar()
    {
        if(ChunkProgressBarValue <= 5)
        {
            ChunkProgressBarValue++;
        }
        if(ChunkProgressBarValue > 5)
        {
            ChunkProgressBarValue = 0;
        }

    }

    private string colorValue { get; set; } = "rgb(40, 47, 137)";
}

<style>
    .tileBgColor{
        background-color: @colorValue;
    }
</style>

